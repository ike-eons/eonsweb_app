restart node

node:internal/errors:456
    ErrorCaptureStackTrace(err);
    ^

Error: write EPIPE
    at ChildProcess.target._send (node:internal/child_process:849:20)
    at ChildProcess.target.send (node:internal/child_process:722:19)
    at D:\projects\business_app_vue_electron-main\node_modules\vue-cli-plugin-electron-builder\index.js:393:26
    at new Promise (<anonymous>)
    at killElectron (D:\projects\business_app_vue_electron-main\node_modules\vue-cli-plugin-electron-builder\index.js:381:9)   
    at launchElectron (D:\projects\business_app_vue_electron-main\node_modules\vue-cli-plugin-electron-builder\index.js:455:15)
    at D:\projects\business_app_vue_electron-main\node_modules\vue-cli-plugin-electron-builder\index.js:355:17
    at finalCallback (D:\projects\business_app_vue_electron-main\node_modules\webpack\lib\Compiler.js:257:39)
    at D:\projects\business_app_vue_electron-main\node_modules\webpack\lib\Compiler.js:306:14
    at AsyncSeriesHook.eval [as callAsync] (eval at create (D:\projects\business_app_vue_electron-main\node_modules\tapable\lib\HookCodeFactory.js:33:10), <anonymous>:15:1)
    at AsyncSeriesHook.lazyCompileHook (D:\projects\business_app_vue_electron-main\node_modules\tapable\lib\Hook.js:154:20)
    at D:\projects\business_app_vue_electron-main\node_modules\webpack\lib\Compiler.js:304:22
    at Compiler.emitRecords (D:\projects\business_app_vue_electron-main\node_modules\webpack\lib\Compiler.js:499:39)
    at D:\projects\business_app_vue_electron-main\node_modules\webpack\lib\Compiler.js:298:10
    at D:\projects\business_app_vue_electron-main\node_modules\webpack\lib\Compiler.js:485:14
    at AsyncSeriesHook.eval [as callAsync] (eval at create (D:\projects\business_app_vue_electron-main\node_modules\tapable\lib\HookCodeFactory.js:33:10), <anonymous>:6:1) {
  errno: -4047,
  code: 'EPIPE',
  syscall: 'write'
}

selectedCustomer: this.$store.state.customers.customers[2]
        ? this.$store.state.customers.customers[2].id
        : null,
      selectedCustomer: this.$store.state.customers.customers.find(
        (c) => c.id === 1
      ).id,